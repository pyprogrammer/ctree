{"name":"Ctree","tagline":"A C-family AST library designed to be an IR for DSL compilers.","body":"### Overview.\r\nCtree is a framework for building domain-specific languages embedded in Python. It provides utilities for parsing Python code, transforming it to a C-level representation, JIT-compiling it via LLVM, and making the compiled code available to Python applications. Support is planned for OpenMP, OpenCL, Cilk+, and other parallel programming extensions.\r\n\r\n### Examples\r\nComing soon! For now, check out the [ArrayDoubler](https://github.com/ucb-sejits/ctree/blob/master/examples/ArrayDoubler.py) example in the source tree.\r\n\r\n### Getting started\r\nCtree is available on Github. See the [Installation Guide](https://ucb-sejits.github.io/ctree-docs/install.html) for more information.\r\n\r\n### Documentation\r\nAvailable [here](http://ucb-sejits.github.io/ctree-docs).\r\n\r\n### Tutorial\r\nAvailable [here](https://ucb-sejits.github.io/ctree-docs/tutorial.html).\r\n\r\n### Build status\r\nCtree uses the latest and greatest in agile development practices!\r\n* Continuous integration testing via [TravisCI](https://travis-ci.org/ucb-sejits/ctree).\r\n* Code coverage via [Coveralls](https://coveralls.io/r/ucb-sejits/ctree).\r\n* Auto-generated [documentation](http://ucb-sejits.github.io/ctree-docs/) via Sphinx.\r\n\r\n[![Build Status](https://travis-ci.org/ucb-sejits/ctree.png?branch=master)](https://travis-ci.org/ucb-sejits/ctree)\r\n[![Coverage Status](https://coveralls.io/repos/ucb-sejits/ctree/badge.png)](https://coveralls.io/r/ucb-sejits/ctree)\r\n\r\n### Authors and Contributors\r\n* Michael Driscoll (@mbdriscoll)\r\n* Chick Markley (@chick)\r\n\r\n### Support or Contact\r\nPlease file an issue in the [bug tracker](https://github.com/mbdriscoll/ctree/issues).","google":"UA-48567852-1","note":"Don't delete this file! It's used internally to help with page regeneration."}